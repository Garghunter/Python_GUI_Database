import tkinter as tk
import mysql.connector
import random

def genAno():
    a=random.randint(1,9)
    b=random.randint(1,9)
    c=random.randint(1,9)
    d=random.randint(1,9)
    num="sbi"+str(a)+str(b)+str(c)+str(d)
    return num
def acccheck(acc_num):
    con = mysql.connector.connect(host='localhost', database='college', user='root', password='')
    if con.is_connected():
        qry = "select acc_num from clg_bank where acc_num='{}'".format(acc_num)
        c1 = con.cursor()
        c1.execute(qry)
        rows = c1.fetchall()
        if c1.rowcount>0:
            x=True
        else:
            x=False
        return x

class MainMenu(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.grid()
        self.label = tk.Label(self, text="Bank Application",padx=235,pady=47, fg='black', bg='#FF00FF',font=('arial',10))
        self.label.pack(pady=1.5)
        self.open_account_button = tk.Button(self, text="open Account", command=self.open_account,padx=65,pady=18,bg='#00FFFF',font=('arial',10))
        self.open_account_button.pack(pady=1.5)
        self.Credited_Money_button = tk.Button(self, text="Credited Money", command=self.credited_money,padx=59,pady=18,bg='#00FFFF',font=('arial',10))
        self.Credited_Money_button.pack(pady=.5)
        self.Deposit_Money_button = tk.Button(self, text='Deposit Money', command=self.deposit_money, padx=61,pady=18, bg='#00FFFF', font=('arial', 10))
        self.Deposit_Money_button.pack(pady=1.5)
        self.Enquiry_Account_button = tk.Button(self, text="Enquiry Account", command=self.enquiry_account,padx=56.5,pady=18,bg='#00FFFF',font=('arial',10))
        self.Enquiry_Account_button.pack(pady=1.5)
        self.Transfer_Money_button = tk.Button(self, text="Transfer Money", command=self.transfer_money,padx=60,pady=18,bg='#00FFFF',font=('arial',10))
        self.Transfer_Money_button.pack(pady=1.5)
        self.Close_account_button = tk.Button(self, text='Close Account', command=self.Close_account,padx=62,pady=18,bg='#00FFFF',font=('arial',10))
        self.Close_account_button.pack(pady=1.5)
        self.quit_button = tk.Button(self, text="Quit", command=self.master.quit)
        self.quit_button.pack(pady=5)
    def open_account(self):
        self.master.switch_frame(Open_Account)

    def credited_money(self):
        self.master.switch_frame(Credited_Money)

    def deposit_money(self):
        self.master.switch_frame(Deposit_Money)

    def enquiry_account(self):
        self.master.switch_frame(Enquiry_Account)

    def Close_account(self):
        self.master.switch_frame(Close_Account)

    def transfer_money(self):
        self.master.switch_frame(Transfer_Money)

class Open_Account(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.grid()
        self.label1 = tk.Label(self, text="open Account", font=("Arial", 18))
        self.label1.pack(pady=10)
        self.Name_label = tk.Label(self, text="Enter Your Name:")
        self.Name_label.pack()
        self.Name_entry = tk.Entry(self)
        self.Name_entry.pack(pady=5)
        self.Fname_label = tk.Label(self, text="Enter Your Father Name:")
        self.Fname_label.pack()
        self.Fname_entry = tk.Entry(self)
        self.Fname_entry.pack(pady=5)
        self.atype_label = tk.Label(self, text="Enter Your Account type:")
        self.atype_label.pack()
        self.atype_entry = tk.Entry(self)
        self.atype_entry.pack(pady=5)
        self.add_button = tk.Button(self, text="Add", command=self.add_student)
        self.add_button.pack(pady=8)
        self.back_button = tk.Button(self, text="Back to Main Menu", command=self.go_to_main_menu)
        self.back_button.pack(pady=8)

    def go_to_main_menu(self):
        self.master.switch_frame(MainMenu)
        self.label2.config(text="")
        self.label3.config(text="")

    def add_student(self):
        con = mysql.connector.connect(host='localhost', database='college', user='root', password='')
        if con.is_connected():
            Name = self.Name_entry.get()
            father_name = self.Fname_entry.get()
            acc_num=genAno()
            acc_type = self.atype_entry.get()
            if acc_type == 'current':
                acc_bal= 3000
            else:
                acc_bal= 2500
            qry = "insert into clg_bank values('{}','{}','{}','{}',{})".format(Name,father_name,acc_num,acc_type,acc_bal)
            c1 = con.cursor()
            c1.execute(qry)
            con.commit()
            con.close
            self.label2 = tk.Label(self, text="Thank you for choosing our bankðŸ˜ŠðŸ˜Š"
                                             "congratulations your bank account has been open", font=("Arial", 10))
            self.label2.pack(pady=5)
            self.label3 = tk.Label(self, text="Your Account Number is '{}'".format(acc_num), font=("Arial", 10))
            self.label3.pack(pady=5)
        else:
            self.label = tk.Label(self, text="Server Error(MySQL is not Connected)", font=("Arial", 10))
            self.label.pack(pady=5)
            con.close

class Credited_Money(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.grid()
        self.label = tk.Label(self, text="Credited Money", font=("Arial", 18))
        self.label.pack(pady=10)
        self.acc_num_label = tk.Label(self, text="Enter Your Account Number:")
        self.acc_num_label.pack()
        self.acc_num_entry = tk.Entry(self)
        self.acc_num_entry.pack(pady=5)
        self.Search_button = tk.Button(self, text="Search", command=self.credited_money)
        self.Search_button.pack(pady=8)
        self.back_button = tk.Button(self, text="Back to Main Menu", command=self.go_to_main_menu)
        self.back_button.pack(pady=8)

    def go_to_main_menu(self):
        self.master.switch_frame(MainMenu)
        self.label.config(text="")

    def credited_money(self):
        con = mysql.connector.connect(host='localhost', database='college', user='root', password='')
        if con.is_connected():
            acc_num = self.acc_num_entry.get()
            if acccheck(acc_num):
                self.acc_bal_label = tk.Label(self, text="Enter Your Money:")
                self.acc_bal_label.pack()
                self.acc_bal_entry = tk.Entry(self)
                self.acc_bal_entry.pack(pady=5)
                self.Credited_Money_button = tk.Button(self, text="Credited Money", command=self.money)
                self.Credited_Money_button.pack(pady=8)
            else:
                self.label = tk.Label(self, text="Account Not Found", font=("Arial", 10))
                self.label.pack(pady=5)
                con.close
        else:
            self.label = tk.Label(self, text="Server Error(MySQL is not Connected)", font=("Arial", 10))
            self.label.pack(pady=5)
            con.close
    def money(self):
        con = mysql.connector.connect(host='localhost', database='college', user='root', password='')
        if con.is_connected():
            acc_num = self.acc_num_entry.get()
            acc_bal=self.acc_bal_entry.get()
            qry = "update clg_bank set acc_bal=acc_bal+{} where acc_num='{}'".format(acc_bal,acc_num)
            c1 = con.cursor()
            c1.execute(qry)
            con.commit()
            con.close
            self.label = tk.Label(self, text="Your Money has been CreditedðŸ˜ŠðŸ˜Š", font=("Arial", 10))
            self.label.pack(pady=5)
            self.back_button = tk.Button(self, text="Back to Main Menu", command=self.go_to_main_menu)
            self.back_button.pack(pady=8)
        else:
            self.label = tk.Label(self, text="Server Error(MySQL is not Connected)", font=("Arial", 10))
            self.label.pack(pady=5)
            con.close

class Deposit_Money(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.grid()
        self.label = tk.Label(self, text="Deposit Money", font=("Arial", 18))
        self.label.pack(pady=10)
        self.acc_num_label = tk.Label(self, text="Enter Your Account Number:")
        self.acc_num_label.pack()
        self.acc_num_entry = tk.Entry(self)
        self.acc_num_entry.pack(pady=5)
        self.Search_button = tk.Button(self, text="Search", command=self.deposit_money)
        self.Search_button.pack(pady=8)
        self.back_button = tk.Button(self, text="Back to Main Menu", command=self.go_to_main_menu)
        self.back_button.pack(pady=8)

    def go_to_main_menu(self):
        self.master.switch_frame(MainMenu)
        self.label.config(text="")

    def deposit_money(self):
        con = mysql.connector.connect(host='localhost', database='college', user='root', password='')
        if con.is_connected():
            acc_num = self.acc_num_entry.get()
            if acccheck(acc_num):
                self.acc_bal_label = tk.Label(self, text="Enter Your Money:")
                self.acc_bal_label.pack()
                self.acc_bal_entry = tk.Entry(self)
                self.acc_bal_entry.pack(pady=5)
                self.Credited_Money_button = tk.Button(self, text="Deposit Money", command=self.money)
                self.Credited_Money_button.pack(pady=8)
            else:
                self.label = tk.Label(self, text="Account Not Found", font=("Arial", 10))
                self.label.pack(pady=5)
                con.close
        else:
            self.label = tk.Label(self, text="Server Error(MySQL is not Connected)", font=("Arial", 10))
            self.label.pack(pady=5)
            con.close
    def money(self):
        con = mysql.connector.connect(host='localhost', database='college', user='root', password='')
        if con.is_connected():
            acc_num = self.acc_num_entry.get()
            acc_bal=self.acc_bal_entry.get()
            qry = "update clg_bank set acc_bal=acc_bal-{} where acc_num='{}'".format(acc_bal,acc_num)
            c1 = con.cursor()
            c1.execute(qry)
            con.commit()
            con.close
            self.label = tk.Label(self, text="Your Money has been DepositðŸ˜ŠðŸ˜Š", font=("Arial", 10))
            self.label.pack(pady=5)
            self.back_button = tk.Button(self, text="Back to Main Menu", command=self.go_to_main_menu)
            self.back_button.pack(pady=8)
        else:
            self.label = tk.Label(self, text="Server Error(MySQL is not Connected)", font=("Arial", 10))
            self.label.pack(pady=5)
            con.close


class Enquiry_Account(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.grid()
        self.label = tk.Label(self, text="Enquiry Account", font=("Arial", 18))
        self.label.pack(pady=10)
        self.acc_num_label = tk.Label(self, text="Enter Your Account Number:")
        self.acc_num_label.pack()
        self.acc_num_entry = tk.Entry(self)
        self.acc_num_entry.pack(pady=5)
        self.Search_button = tk.Button(self, text="Search", command=self.enquiry_account)
        self.Search_button.pack(pady=8)
        self.back_button = tk.Button(self, text="Back to Main Menu", command=self.go_to_main_menu)
        self.back_button.pack(pady=8)

    def go_to_main_menu(self):
        self.master.switch_frame(MainMenu)
        self.label.config(text="")

    def enquiry_account(self):
        con = mysql.connector.connect(host='localhost', database='college', user='root', password='')
        if con.is_connected():
            acc_num = self.acc_num_entry.get()
            if acccheck(acc_num):
                qry = "select * from clg_bank where acc_num ='{}'".format(acc_num)
                c1 = con.cursor()
                c1.execute(qry)
                rows = c1.fetchall()
                for x in rows:
                    self.label = tk.Label(self, text='Name is {}'.format(x[0]), font=("Arial", 10))
                    self.label.pack(pady=5)
                    self.label = tk.Label(self, text='Father Name is {}'.format(x[1]), font=("Arial", 10))
                    self.label.pack(pady=5)
                    self.label = tk.Label(self, text='Account Number is {}'.format(x[2]), font=("Arial", 10))
                    self.label.pack(pady=5)
                    self.label = tk.Label(self, text='Account Type is {}'.format(x[3]), font=("Arial", 10))
                    self.label.pack(pady=5)
                    self.label = tk.Label(self, text='Account Balance is {}'.format(x[4]),font=("Arial", 10))
                    self.label.pack(pady=5)
                    self.back_button = tk.Button(self, text="Back to Main Menu", command=self.go_to_main_menu)
                    self.back_button.pack(pady=8)
            else:
                self.label = tk.Label(self, text="Account Not Found", font=("Arial", 10))
                self.label.pack(pady=5)
                con.close
        else:
            self.label = tk.Label(self, text="Server Error(MySQL is not Connected)", font=("Arial", 10))
            self.label.pack(pady=5)
            con.close

class Close_Account(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.grid()
        self.label = tk.Label(self, text="Close account", font=("Arial", 18))
        self.label.pack(pady=10)
        self.acc_num_label = tk.Label(self, text="Enter Your Account Number:")
        self.acc_num_label.pack()
        self.acc_num_entry = tk.Entry(self)
        self.acc_num_entry.pack(pady=5)
        self.Search_button = tk.Button(self, text="Search", command=self.Close_account)
        self.Search_button.pack(pady=8)
        self.back_button = tk.Button(self, text="Back to Main Menu", command=self.go_to_main_menu)
        self.back_button.pack(pady=8)

    def go_to_main_menu(self):
        self.master.switch_frame(MainMenu)
        self.label.config(text="")

    def Close_account(self):
        con = mysql.connector.connect(host='localhost', database='college', user='root', password='')
        if con.is_connected():
            acc_num = self.acc_num_entry.get()
            if acccheck(acc_num):
                qry = "delete from clg_bank where acc_num='{}'".format(acc_num)
                c1 = con.cursor()
                c1.execute(qry)
                con.commit()
                con.close
                self.label = tk.Label(self, text='Your Account has Been Closed', font=("Arial", 10))
                self.label.pack(pady=5)
                self.back_button = tk.Button(self, text="Back to Main Menu", command=self.go_to_main_menu)
                self.back_button.pack(pady=8)
            else:
                self.label = tk.Label(self, text="Account Not Found", font=("Arial", 10))
                self.label.pack(pady=5)
                con.close
        else:
            self.label = tk.Label(self, text="Server Error(MySQL is not Connected)", font=("Arial", 10))
            self.label.pack(pady=5)
            con.close

class Transfer_Money(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.grid()
        self.label = tk.Label(self, text="Transfer money", font=("Arial", 18))
        self.label.pack(pady=10)
        self.acc_num_label = tk.Label(self, text="Enter Sender Account Number:")
        self.acc_num_label.pack()
        self.acc_num_entry = tk.Entry(self)
        self.acc_num_entry.pack(pady=5)
        self.acc_num1_label = tk.Label(self, text="Enter Receiver Account Number:")
        self.acc_num1_label.pack()
        self.acc_num1_entry = tk.Entry(self)
        self.acc_num1_entry.pack(pady=5)
        self.Search_button = tk.Button(self, text="Search", command=self.transfer_money)
        self.Search_button.pack(pady=8)
        self.back_button = tk.Button(self, text="Back to Main Menu", command=self.go_to_main_menu)
        self.back_button.pack(pady=8)

    def go_to_main_menu(self):
        self.master.switch_frame(MainMenu)
        self.label.config(text="")

    def transfer_money(self):
        con = mysql.connector.connect(host='localhost', database='college', user='root', password='')
        if con.is_connected():
            acc_num = self.acc_num_entry.get()
            acc_num1 = self.acc_num1_entry.get()
            if acccheck(acc_num):
                if acccheck(acc_num1):
                    self.acc_bal_label = tk.Label(self, text="Enter Your Money:")
                    self.acc_bal_label.pack()
                    self.acc_bal_entry = tk.Entry(self)
                    self.acc_bal_entry.pack(pady=5)
                    self.transfer_money_button = tk.Button(self, text="Transfer Money", command=self.money)
                    self.transfer_money_button.pack(pady=8)
                else:
                    self.label = tk.Label(self, text="Receiver Account Not Found", font=("Arial", 10))
                    self.label.pack(pady=5)
                    con.close
            else:
                self.label = tk.Label(self, text="Sender Account Not Found", font=("Arial", 10))
                self.label.pack(pady=5)
                con.close
        else:
            self.label = tk.Label(self, text="Server Error(MySQL is not Connected)", font=("Arial", 10))
            self.label.pack(pady=5)
            con.close
    def money(self):
        con = mysql.connector.connect(host='localhost', database='college', user='root', password='')
        if con.is_connected():
            acc_num = self.acc_num_entry.get()
            acc_num1 = self.acc_num1_entry.get()
            acc_bal = self.acc_bal_entry.get()
            qry1 = "update clg_bank set acc_bal=acc_bal-{} where acc_num='{}'".format(acc_bal, acc_num)
            qry2 = "update clg_bank set acc_bal=acc_bal+{} where acc_num='{}'".format(acc_bal, acc_num1)
            c1 = con.cursor()
            c1.execute(qry1)
            c1.execute(qry2)
            con.commit()
            con.close
            self.label = tk.Label(self, text="Your Money has been TransferðŸ˜ŠðŸ˜Š", font=("Arial", 10))
            self.label.pack(pady=5)
            self.back_button = tk.Button(self, text="Back to Main Menu", command=self.go_to_main_menu)
            self.back_button.pack(pady=8)
        else:
            self.label = tk.Label(self, text="Server Error(MySQL is not Connected)", font=("Arial", 10))
            self.label.pack(pady=5)
            con.close
class App(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("Bank Using SQL")
        self.geometry("570x600")
        self.frames = {}
        for F in (MainMenu, Open_Account,Credited_Money,Deposit_Money,Enquiry_Account,Close_Account,Transfer_Money):
            frame = F(self)
            self.frames[F] = frame
            frame.grid(row=0, column=0, sticky="nsew")
        self.switch_frame(MainMenu)
    def switch_frame(self, frame_class):
        frame = self.frames[frame_class]
        frame.tkraise()
if __name__ == "__main__":
    app = App()
    app.mainloop()
